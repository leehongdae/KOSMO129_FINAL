/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-07-27 10:10:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import com.gt.s.common.FileUploadUtil;
import com.gt.s.kos.project.vo.GtProjectVO;
import com.gt.s.kos.account.vo.GtAccountVO;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class projectselect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.gt.s.common.FileUploadUtil");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("com.gt.s.kos.account.vo.GtAccountVO");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("com.gt.s.kos.project.vo.GtProjectVO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	Logger log = LogManager.getLogger(this.getClass());
	log.info("projectselect.jsp");
	
	Object obj = request.getAttribute("aList");
	
	List<GtProjectVO> aList = (List<GtProjectVO>)obj;
	
	GtProjectVO pvo = aList.get(0);
	
	Object obj2 = request.getAttribute("aList2");
	
	List<GtAccountVO> aList2 = (List<GtAccountVO>)obj2;
	
	GtAccountVO gvo = aList2.get(0);
	
	Date now = new Date();
	
	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	
	String currentDate = dateFormat.format(now);
	
	log.info("여기는 aList.size() 입니다 " + aList.size());
	
	

      out.write("  \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <script src=\"https://cdn.quilljs.com/1.3.6/quill.js\"></script>\r\n");
      out.write("    <script\r\n");
      out.write("      type=\"text/javascript\"\r\n");
      out.write("      src=\"https://code.jquery.com/jquery-1.11.0.min.js\"\r\n");
      out.write("    ></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      $(document).ready(function () {\r\n");
      out.write("    	  alert(\"\");\r\n");
      out.write("    	  var ss = new moment();\r\n");
      out.write("        \r\n");
      out.write("       	  var formatteDate = ss.format('YYYY-MM-DD');\r\n");
      out.write("        \r\n");
      out.write("          alert(\"formatteDate >>> : \" + formatteDate);\r\n");
      out.write("        \r\n");
      out.write("          var status = \"\";\r\n");
      out.write("		 	\r\n");
      out.write("          // 프로젝트 시작일 < 현재날짜 보다 \r\n");
      out.write("		\r\n");
      out.write("		  if(");
      out.print(pvo.getGpstartdate());
      out.write(" <  ");
      out.print(currentDate);
      out.write("){\r\n");
      out.write("        	status = \"개발\";\r\n");
      out.write("					\r\n");
      out.write("        	\r\n");
      out.write("         		// 프로젝트 시작일 > 현재날짜\r\n");
      out.write("          }else if(");
      out.print(pvo.getGpstartdate());
      out.write(" >  ");
      out.print(currentDate);
      out.write("){\r\n");
      out.write("          	\r\n");
      out.write("        	status = \"프로젝트 시작\";\r\n");
      out.write("        	\r\n");
      out.write("          }else if(");
      out.print(pvo.getGpstartdate());
      out.write(" <  ");
      out.print(currentDate);
      out.write(" && ");
      out.print(pvo.getGpenddate());
      out.write(' ');
      out.write('<');
      out.write(' ');
      out.print(currentDate);
      out.write(" ){\r\n");
      out.write("        	\r\n");
      out.write("        	status = \"개발완료\";\r\n");
      out.write("          }\r\n");
      out.write("\r\n");
      out.write("	      \r\n");
      out.write("		  $(\".psei\").append(\"<tr>\" +\r\n");
      out.write("				  \"<td>프로젝트 시작일</td>\" +\r\n");
      out.write("				  \"<td>");
      out.print(pvo.getGpstartdate());
      out.write("</td>\" +\r\n");
      out.write("				  \"</tr>\" +\r\n");
      out.write("				  \"<tr>\" +\r\n");
      out.write("				  \"<td>프로젝트 종료일</td>\" +\r\n");
      out.write("				  \"<td>");
      out.print(pvo.getGpenddate());
      out.write("</td>\" +\r\n");
      out.write("				  \"</tr>\" +\r\n");
      out.write("				  \"<tr>\" +\r\n");
      out.write("				  \"<td>프로젝트 진행상태</td>\" +\r\n");
      out.write("				  \"<td>\" + status + \"</td>\" +\r\n");
      out.write("				  \"</tr>\" +\r\n");
      out.write("				  \"<tr>\" +\r\n");
      out.write("				  \"<td>내용</td>\" +\r\n");
      out.write("				  \"<td>");
      out.print(pvo.getGpnote());
      out.write("</td>\" +\r\n");
      out.write("				  \"</tr>\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("	         // end of if	\r\n");
      out.write("    	  \r\n");
      out.write("    	  \r\n");
      out.write("      }); // end of ready\r\n");
      out.write("    </script>\r\n");
      out.write("    <style>\r\n");
      out.write("      .container2 {\r\n");
      out.write("        display: flex;\r\n");
      out.write("      }\r\n");
      out.write("      .container h3 {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 10px 0;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("      }\r\n");
      out.write("      .innercontainer {\r\n");
      out.write("      }\r\n");
      out.write("      .contents {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        width : 100%;\r\n");
      out.write("      }\r\n");
      out.write("      .conn{\r\n");
      out.write("      background-color: white;\r\n");
      out.write("      width : 100%;\r\n");
      out.write("      margin: 10px;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("	.fire tr:first-child {\r\n");
      out.write("		background-color: #666666;\r\n");
      out.write("		color: #ffffff;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.fire td {\r\n");
      out.write("		border: 1px solid black;\r\n");
      out.write("		padding: 5px;\r\n");
      out.write("	}\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <div class=\"container2\" style=\"margin: 0\">\r\n");
      out.write("      <div>\r\n");
      out.write("        ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/mainSide-bar.jsp", out, false);
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      <div style=\"margin: 0; padding: 0; width: 100%\">\r\n");
      out.write("        <div>\r\n");
      out.write("          ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/Top-bar.jsp", out, false);
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"contents\">\r\n");
      out.write("          <div style=\"margin-right:15px;\">\r\n");
      out.write("            <div class=\"conn\">\r\n");
      out.write("            	<br>\r\n");
      out.write("          		<table class=\"fire\">\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>프로젝트ID</td>\r\n");
      out.write("            		<td>");
      out.print(pvo.getGpnum() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>구분</td>\r\n");
      out.write("            		<td>");
      out.print(pvo.getGpgubun() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>등록일자</td>\r\n");
      out.write("            		<td>");
      out.print(pvo.getInsertdate() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>완료일자</td>\r\n");
      out.write("            		<td>");
      out.print(pvo.getGpenddate() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>관리부서</td>\r\n");
      out.write("            		<td>");
      out.print(pvo.getGptic() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>관리자(담당PM)</td>\r\n");
      out.write("            		<td>");
      out.print(pvo.getGpticman() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>계약여부</td>\r\n");
      out.write("            		<td>");
      out.print(gvo.getDeleteyn() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>계약 시작일</td>\r\n");
      out.write("            		<td>");
      out.print(gvo.getStartdate() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>계약 종료일</td>\r\n");
      out.write("            		<td>");
      out.print(gvo.getEnddate() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            </table>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"conn\" >\r\n");
      out.write("          	<table class=\"fire\">\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>계약처</td>\r\n");
      out.write("            		<td>");
      out.print(gvo.getGaname() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            	<tr>\r\n");
      out.write("            		<td>계약처 담당</td>\r\n");
      out.write("            		<td>");
      out.print(gvo.getGaname() );
      out.write("</td>\r\n");
      out.write("            	</tr>\r\n");
      out.write("            </table>\r\n");
      out.write("          </div>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"conn\" style=\"\">\r\n");
      out.write("          <br>\r\n");
      out.write("            <table class=\"fire psei\">\r\n");
      out.write("            </table>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
