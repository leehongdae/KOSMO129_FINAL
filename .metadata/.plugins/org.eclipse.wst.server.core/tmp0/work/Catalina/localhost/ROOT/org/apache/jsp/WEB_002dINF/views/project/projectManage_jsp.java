/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-08-02 05:52:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import com.gt.s.kos.project.vo.*;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import java.util.Date;
import java.text.SimpleDateFormat;

public final class projectManage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("com.gt.s.kos.project.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

   Logger log = LogManager.getLogger(this.getClass());
   log.info("projectManage.jsp");
   
   Date now = new Date();
   SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
   String currentDate = dateFormat.format(now);

      out.write("  \r\n");
      out.write("\r\n");

   Object obj = request.getAttribute("aList");
      
   List<GtProjectVO> aList = (List<GtProjectVO>)obj;
   
   

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://code.jquery.com/jquery-1.11.0.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("      $(document).ready(function () {\r\n");
      out.write("        \r\n");
      out.write("        var ss = new moment();\r\n");
      out.write("        \r\n");
      out.write("        var formatteDate = ss.format('YYYY-MM-DD');\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        var status = \"\";\r\n");
      out.write("        \r\n");
      out.write("        ");
 if(aList != null && !aList.isEmpty()) {
           
           
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");

           for(int i = 0; i < aList.size(); i++) {
           GtProjectVO pvo = aList.get(i);     
      
      out.write("       \r\n");
      out.write("          \r\n");
      out.write("           // 프로젝트 시작일 < 현재날짜 보다 \r\n");
      out.write("         \r\n");
      out.write("         if(");
      out.print(pvo.getGpstartdate());
      out.write(" <  ");
      out.print(currentDate);
      out.write("){\r\n");
      out.write("              status = \"개발\";\r\n");
      out.write("                  \r\n");
      out.write("              \r\n");
      out.write("                 // 프로젝트 시작일 > 현재날짜\r\n");
      out.write("           }else if(");
      out.print(pvo.getGpstartdate());
      out.write(" >  ");
      out.print(currentDate);
      out.write("){\r\n");
      out.write("              \r\n");
      out.write("              status = \"프로젝트 시작\";\r\n");
      out.write("              \r\n");
      out.write("           }else if(");
      out.print(pvo.getGpstartdate());
      out.write(" <  ");
      out.print(currentDate);
      out.write(" && ");
      out.print(pvo.getGpenddate());
      out.write(' ');
      out.write('<');
      out.write(' ');
      out.print(currentDate);
      out.write(" ){\r\n");
      out.write("              \r\n");
      out.write("              status = \"개발완료\";\r\n");
      out.write("           }\r\n");
      out.write("              \r\n");
      out.write("            // end of if   \r\n");
      out.write("              \r\n");
      out.write("          $(\"#pmtable\").append(\"<tr><td>\"+status+\"</td>\"\r\n");
      out.write("                      + \"<td style='text-align:center;'>");
      out.print( pvo.getGpcontr() );
      out.write("</td>\"\r\n");
      out.write("                      + \"<td style='text-align:center;' class='getgpnum'>");
      out.print( pvo.getGpnum() );
      out.write(" </td>\"\r\n");
      out.write("                      + \"<td>");
      out.print( pvo.getGpname() );
      out.write(" </td>\"\r\n");
      out.write("                      + \"<td style='text-align:center;'>");
      out.print( pvo.getGpticman() );
      out.write(" </td>\"\r\n");
      out.write("                      + \"<td style='text-align:center;'>");
      out.print( pvo.getGpstartdate() );
      out.write(" </td>\"\r\n");
      out.write("                      + \"<td style='text-align:center;'>");
      out.print( pvo.getGpenddate() );
      out.write(" </td>\"\r\n");
      out.write("                      + \"</tr>\");\r\n");
      out.write("           \r\n");
      out.write("          \r\n");
      out.write("           \r\n");
      out.write("      ");
        
           }
      }else{
         
         
      } 
      out.write("    \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("        \r\n");
      out.write("        $(document).on('click','#pinsert',function(){\r\n");
      out.write("           location.href = \"projectInsertForm.gos\";\r\n");
      out.write("           \r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $(document).on('click','.getgpnum',function(){\r\n");
      out.write("           var carrypnum = $(this).text();\r\n");
      out.write("           \r\n");
      out.write("           location.href = \"projectInsertForm.gos\";\r\n");
      out.write("           \r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("      }); // end of ready\r\n");
      out.write("    </script>\r\n");
      out.write("    \r\n");
      out.write("   <style>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("      html, body {\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("      }\r\n");
      out.write("      body {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("      }\r\n");
      out.write("      body {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        font-family: Arial, sans-serif;\r\n");
      out.write("      }\r\n");
      out.write("      .con {\r\n");
      out.write("        flex: 1;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .container2 {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        height: 100px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .container {\r\n");
      out.write("       display: flex; /* Flexbox를 적용하여 요소들을 가로로 배치합니다 */\r\n");
      out.write("       flex-direction: row; /* 요소들을 가로 방향으로 배치합니다 */\r\n");
      out.write("       justify-content: space-between; /* 각 요소를 좌우로 최대한 벌립니다 */\r\n");
      out.write("       height: 430.43; \r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .container > div {\r\n");
      out.write("        max-width: 800px;\r\n");
      out.write("        margin: 0 auto;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        border: 1px solid #ccc; \r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .container h3 {\r\n");
      out.write("        margin: 0;\r\n");
      out.write("        padding: 10px 0;\r\n");
      out.write("        font-size: 18px;\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .calendar {\r\n");
      out.write("        height: 200px;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      .alert th {\r\n");
      out.write("        background-color: #f0f0f0;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .work {\r\n");
      out.write("        height: 300px;\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      #maindiv{\r\n");
      out.write("         width:100%;\r\n");
      out.write("         height:100%;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("     table {\r\n");
      out.write("       border-collapse: collapse; /* 테이블 셀 경계를 병합합니다. */\r\n");
      out.write("     }\r\n");
      out.write("   \r\n");
      out.write("     tr {\r\n");
      out.write("       border: 1px solid #A4A4A4; /* 행에 경계선을 추가합니다. */\r\n");
      out.write("     }\r\n");
      out.write("   \r\n");
      out.write("     th, td {\r\n");
      out.write("       padding: 8px; /* 셀 내부 여백을 설정합니다. */\r\n");
      out.write("       border: 1px solid #A4A4A4;\r\n");
      out.write("     }\r\n");
      out.write("     \r\n");
      out.write("     .styled-button {\r\n");
      out.write("        background-color: #585858; /* 배경색 */\r\n");
      out.write("        border: none; /* 테두리 없음 */\r\n");
      out.write("        color: white; /* 텍스트 색상 */\r\n");
      out.write("        padding: 10px 20px; /* 안쪽 여백 */\r\n");
      out.write("        text-align: center; /* 텍스트 가운데 정렬 */\r\n");
      out.write("        text-decoration: none; /* 텍스트 밑줄 없음 */\r\n");
      out.write("        display: inline-block; /* 인라인 블록 요소로 설정 */\r\n");
      out.write("        font-size: 16px; /* 폰트 크기 */\r\n");
      out.write("        border-radius: 4px; /* 테두리 둥글기 */\r\n");
      out.write("        cursor: pointer; /* 마우스 커서가 올라갔을 때 손가락 커서로 변경 */\r\n");
      out.write("        font-weight: bold;\r\n");
      out.write("      }\r\n");
      out.write("      .Va_Table_S tr:nth-child(even) {\r\n");
      out.write("         background-color: #f0f0f0;\r\n");
      out.write("     }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("   <div class=\"container2\" style=\"margin: 0; height:100%;\">\r\n");
      out.write("      <div style=\"height:100%; max-height:970px;\">\r\n");
      out.write("         ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/mainSide-bar.jsp", out, false);
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("   <div style=\"margin: 0; padding: 0; width:100%;\">\r\n");
      out.write("      ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../main/Top-bar.jsp", out, false);
      out.write("\r\n");
      out.write("      <br>\r\n");
      out.write("      <span style=\"margin-left:50px; font-size:20px; line-height:1; color: #337ab7;\"><strong>프로젝트 관리</strong></span>\r\n");
      out.write("      <div class=\"alert\" style=\"background-color: whitesmoke; height: auto\">\r\n");
      out.write("      </div>\r\n");
      out.write("         <span style=\"color: #337ab7; line-height:1; margin-left:1360px;\">HOME</span><span style=\"line-height:1;\">&nbsp;/ 프로젝트 / 프로젝트 관리　</span>\r\n");
      out.write("          <table style=\"margin-left:auto; margin-right:auto; border-top:2px solid #1C1C1C; background-color : white; border-radius: 3px; width:1500px;\">\r\n");
      out.write("         <tr>\r\n");
      out.write("            <th colspan=\"7\" style=\"text-align:left;\"><img src=\"/resources/goats_icon/project.png\" width=\"15\" height=\"15\" style=\"position: relative; top:2px;\">프로젝트 관리</th>\r\n");
      out.write("         </tr>\r\n");
      out.write("         <tr>\r\n");
      out.write("         <td colspan=\"7\">\r\n");
      out.write("            <table style=\"width:100%\" class=\"Va_Table_S\" id=\"pmtable\" style=\"overflow:scroll;\">\r\n");
      out.write("               <tr style=\"text-align:left;\">\r\n");
      out.write("                  <th style=\"width:10%; text-align:center;\">상태</th>\r\n");
      out.write("                  <th style=\"width:10%; text-align:center;\">고객명</th>\r\n");
      out.write("                  <th style=\"width:10%; text-align:center;\">프로젝트코드</th>\r\n");
      out.write("                  <th style=\"width:15%; text-align:center;\">프로젝트명</th>\r\n");
      out.write("                  <th style=\"width:10%; text-align:center;\">관리자</th>\r\n");
      out.write("                  <th style=\"width:10%; text-align:center;\">시작일자</th>\r\n");
      out.write("                  <th style=\"width:10%; text-align:center;\">종료일자</th>\r\n");
      out.write("               </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("      </table>\r\n");
      out.write("      <div style=\"border:3px solid white\"></div>\r\n");
      out.write("      <input type=\"button\" value=\"프로젝트 등록\" id=\"pinsert\" class=\"styled-button\" style=\"margin-left:1445px;\">\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("  </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
