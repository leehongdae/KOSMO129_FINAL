/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-08-02 07:52:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.gt.s.kos.employee.vo.*;
import java.util.List;
import java.util.ArrayList;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;

public final class searchman_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.gt.s.kos.employee.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.log4j.Logger");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.apache.log4j.LogManager");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("\r\n");

	Logger log = LogManager.getLogger(this.getClass());
	

      out.write("  \r\n");

		Object obj = request.getAttribute("aList");
		
		List<GtEmployeeVO> aList = (List<GtEmployeeVO>)obj;
		
		log.info("aList.size() >>>> : " + aList.size())	;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"UTF-8\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Insert title here</title>\r\n");
      out.write("    <script\r\n");
      out.write("      type=\"text/javascript\"\r\n");
      out.write("      src=\"https://code.jquery.com/jquery-1.11.0.min.js\"\r\n");
      out.write("    ></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      $(document).ready(function () {\r\n");
      out.write("    	  \r\n");
      out.write("        $(document).on(\"click\", \".co\", function () {\r\n");
      out.write("          $(\".co\").removeClass(\".co\");\r\n");
      out.write("          $(this).toggleClass(\"se\");\r\n");
      out.write("          \r\n");
      out.write("	        var name = $(this).children().eq(0).text();\r\n");
      out.write("	  		var dept = $(this).children().eq(1).text();\r\n");
      out.write("	   		var title = $(this).children().eq(2).text();\r\n");
      out.write("	   		var sabun = $(this).children().eq(3).text();\r\n");
      out.write("		\r\n");
      out.write("	  		window.opener.popdata(name, dept, title, sabun);\r\n");
      out.write("	  		\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $(\"#search\").keyup(function () {\r\n");
      out.write("          var key = $(\"#search\").val();\r\n");
      out.write("\r\n");
      out.write("          $.ajax({\r\n");
      out.write("            url: \"searchman2.gos\",\r\n");
      out.write("            data: { gename: key },\r\n");
      out.write("            async: false,\r\n");
      out.write("            success: function (data) {\r\n");
      out.write("              var row = data.split(\"/\");\r\n");
      out.write("              $(\".co\").remove();\r\n");
      out.write("\r\n");
      out.write("              for (var i = 0; i < row.length - 1; i++) {\r\n");
      out.write("                var list = row[i].split(\",\");\r\n");
      out.write("\r\n");
      out.write("                $(\"#table\").append(\r\n");
      out.write("                		  \"<tr class='co'><td><font size='2'>\" +\r\n");
      out.write("                		    list[0] +\r\n");
      out.write("                		    \"</font></td>\" +\r\n");
      out.write("                		    \"<td><font size='2'>\" +\r\n");
      out.write("                		    list[1] +\r\n");
      out.write("                		    \"</font></td>\" +\r\n");
      out.write("                		    \"<td><font size='2'>\" +\r\n");
      out.write("                		    list[2] +\r\n");
      out.write("                		    \"</font></td>\" +\r\n");
      out.write("                		    \"<td><font size='2'>\" +\r\n");
      out.write("                		    list[3] +\r\n");
      out.write("                		    \"</font></td></tr>\"\r\n");
      out.write("                		    \r\n");
      out.write("                );\r\n");
      out.write("              }\r\n");
      out.write("            },\r\n");
      out.write("          });\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("      table {\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        border-collapse: collapse;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      table td {\r\n");
      out.write("        padding: 8px;\r\n");
      out.write("        border: 1px solid black;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      table th {\r\n");
      out.write("        padding: 8px;\r\n");
      out.write("        background-color: lightgray;\r\n");
      out.write("        border: 1px solid black;\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      .se {\r\n");
      out.write("        background-color: lightgray;\r\n");
      out.write("      }\r\n");
      out.write("    </style>\r\n");
      out.write("  </head>\r\n");
      out.write("  <body>\r\n");
      out.write("    <div style=\"overflow:auto; height= 50px;\">\r\n");
      out.write("      <table id=\"table\" class=\"table\">\r\n");
      out.write("        <th>사원명 검색 : <input type=\"search\" id=\"search\" /></th>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <td>사원명</td>\r\n");
      out.write("          <td>부서</td>\r\n");
      out.write("          <td>자원등급</td>\r\n");
      out.write("          <td>사번</td>\r\n");
      out.write("        </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div style=\"text-align: right\">\r\n");
      out.write("      <input type=\"button\" value=\"입력\" id=\"send\" name=\"send\" style=\"width: 64px\" />\r\n");
      out.write("  	  <input type=\"hidden\">\r\n");
      out.write("    </div>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
