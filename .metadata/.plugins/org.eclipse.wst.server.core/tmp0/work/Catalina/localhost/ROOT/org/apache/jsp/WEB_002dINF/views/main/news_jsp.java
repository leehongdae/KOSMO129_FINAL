/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.87
 * Generated at: 2023-07-28 01:37:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.util.ArrayList;
import org.json.simple.parser.JSONParser;
import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.ServerAddress;
import org.bson.*;

public final class news_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("org.bson");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mongodb.ServerAddress");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.mongodb.DBObject");
    _jspx_imports_classes.add("org.json.simple.parser.JSONParser");
    _jspx_imports_classes.add("com.mongodb.DBCursor");
    _jspx_imports_classes.add("com.mongodb.MongoClient");
    _jspx_imports_classes.add("com.mongodb.BasicDBObject");
    _jspx_imports_classes.add("com.mongodb.DBCollection");
    _jspx_imports_classes.add("com.mongodb.DB");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Cache-Control\" content=\"no-cache\" />\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script  src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("		\r\n");
      out.write(" 		$(document).ready(function(){\r\n");
      out.write(" 			\r\n");
      out.write(" 			newnews();\r\n");
      out.write(" 			\r\n");
      out.write(" 		function newnews(){\r\n");
      out.write(" 			$.ajax({\r\n");
      out.write(" 				url : \"gtQuartzNewsMongoDB.gos\",\r\n");
      out.write(" 				type : \"GET\",\r\n");
      out.write(" 				dataType:\"json\",\r\n");
      out.write(" 				success : news,\r\n");
      out.write(" 			});\r\n");
      out.write("\r\n");
      out.write(" 			function news(res){\r\n");
      out.write(" 							//alert(res);\r\n");
      out.write("					\r\n");
      out.write("  							var a = \"<a href='\" + res[\"link0\"] + \"' target='_blank'>\" + res[\"title0\"] + \"</a><br>\";\r\n");
      out.write("  							var b = \"<a href='\" + res[\"link1\"] + \"' target='_blank'>\" + res[\"title1\"] + \"</a><br>\";\r\n");
      out.write(" 							var c = \"<a href='\" + res[\"link2\"] + \"' target='_blank'>\" + res[\"title2\"] + \"</a><br>\";\r\n");
      out.write("  							var d = \"<a href='\" + res[\"link3\"] + \"' target='_blank'>\" + res[\"title3\"] + \"</a><br>\";\r\n");
      out.write(" 							var e = \"<a href='\" + res[\"link4\"] + \"' target='_blank'>\" + res[\"title4\"] + \"</a><br>\";\r\n");
      out.write("							var f = \"<a href='\" + res[\"link5\"] + \"' target='_blank'>\" + res[\"title5\"] + \"</a><br>\";\r\n");
      out.write(" 							var g = \"<a href='\" + res[\"link6\"] + \"' target='_blank'>\" + res[\"title6\"] + \"</a><br>\";\r\n");
      out.write("  							var h = \"<a href='\" + res[\"link7\"] + \"' target='_blank'>\" + res[\"title7\"] + \"</a><br>\";\r\n");
      out.write("  							var i = \"<a href='\" + res[\"link8\"] + \"' target='_blank'>\" + res[\"title8\"] + \"</a><br>\";\r\n");
      out.write("  							var j = \"<a href='\" + res[\"link9\"] + \"' target='_blank'>\" + res[\"title9\"] + \"</a>\";\r\n");
      out.write(" 							\r\n");
      out.write("  							var newslsit = a + b + c + d + e + f + g + h + i + j\r\n");
      out.write("  							$(\"#wrap\").empty();\r\n");
      out.write("  							$(\"#wrap\").append(newslsit)\r\n");
      out.write("\r\n");
      out.write(" 					};\r\n");
      out.write(" 					\r\n");
      out.write(" 					    \r\n");
      out.write(" 			}\r\n");
      out.write("   		 			setInterval(() => newnews(), 60000);\r\n");
      out.write(" 		});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#wrap {\r\n");
      out.write("margin: 13px 20px 10px 20px;\r\n");
      out.write("font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("h2 {\r\n");
      out.write("margin: 0;\r\n");
      out.write("padding: 18px 0px 0px 20px;\r\n");
      out.write("text-align: left;\r\n");
      out.write("color: lightslategrey;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".newbox {\r\n");
      out.write("    margin: 10px 13px;\r\n");
      out.write("}\r\n");
      out.write(".newcontainer {\r\n");
      out.write("border: 1px solid;\r\n");
      out.write("border-color: darkcyan;\r\n");
      out.write("border-radius: 0.4rem;\r\n");
      out.write("}\r\n");
      out.write(".newcontainer img {\r\n");
      out.write("    width: 35px;\r\n");
      out.write("    height: 35px;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("}\r\n");
      out.write(".a {\r\n");
      out.write("    padding: 0px 45px;\r\n");
      out.write("    font-size: 21px;\r\n");
      out.write("}\r\n");
      out.write("</style> \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"newbox\">\r\n");
      out.write("		<div class=\"newcontainer\">\r\n");
      out.write("			<h2><img src=\"resources/goats_icon/news.png\" > <div class=\"a\">실시간 NEWS</div></h2>\r\n");
      out.write("			<div id=\"wrap\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
